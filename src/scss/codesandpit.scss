@import 'mixins/loader';
@import 'mixins/switch';
@import 'mixins/overlays';
@import 'mixins/codemirror';

.codepencil {
  @import '../../node_modules/overlayscrollbars/styles/overlayscrollbars';

  --border-color: #dee2e6;

  position: relative;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  min-width: 280px;
  height: 100%;
  height: 280px;
  border: 1px solid var(--border-color);

  // 遮罩层
  @include overlays;

  // 加载器
  @include loader;

  // 开关效果
  @include switch;

  // @include abcd;

  // fix:边框线重叠的问题
  &:has(.body .panel.active) {
    border-right: none;
  }

  &:has(.body .panel.active) .header {
    border-right: 1px solid var(--border-color);
  }

  &.fullscreen {
    position: fixed !important;
    inset: 0 !important;
    z-index: 999999 !important;
    width: 100vw !important;
    height: 100vh !important;
    background-color: #fff !important;
  }

  // 头部
  .header {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    padding: 0;
    margin: 0;
    list-style: none;
    border-bottom: 1px solid #dee2e6;

    // background-color: #2c303a;

    li {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 36px;
      padding: 4px;
      margin: 0;

      label {
        display: flex;
        align-items: center;
        color: rgb(108 117 125 / 100%);
      }

      // 按钮样式美化
      button {
        display: flex;
        flex-shrink: 0;
        flex-wrap: nowrap;
        align-items: center;
        justify-content: center;

        // background: #444857;
        height: 30px;
        padding: 0 8px;
        overflow: hidden;
        font-size: 16px;
        white-space: nowrap;
        cursor: pointer;
        user-select: none;
        background: transparent;
        border: 0;
        border-radius: 4px;
        outline: none;
        transition:
          color 0.15s ease-in-out,
          background-color 0.15s ease-in-out;

        svg {
          width: 16px;
          height: 16px;
          fill: #212529;
        }

        &.active {
          color: #0d6efd;
          background-color: #e2edff;
        }

        &:active {
          color: #0d6efd;
          background-color: #e2edff;
        }
      }
    }
  }

  // 身体部分
  .body {
    /* 当子元素内容超出容器时显示滚动条 */
    position: relative;
    display: flex;
    flex-grow: 1;
    overflow: auto;

    .panel {
      display: none;
      flex: 1;
      flex-direction: column;

      /* 平分父容器的空间 */
      min-width: 0;
      background-color: #fff;

      // 给一个右边框线
      border-right: 1px solid var(--border-color);

      &.active {
        display: flex;
      }

      .panel-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 8px 10px;
        font-size: 14px;
        color: rgb(0 0 0 / 50%);
        border-bottom: 1px solid var(--border-color);

        .title {
          flex-shrink: 0;
          font-weight: bold;
        }

        .actions {
          display: flex;
          flex-shrink: 0;
          align-items: center;
          justify-content: center;

          button {
            display: flex;
            align-items: center;
            padding: 0;
            cursor: pointer;
            background: transparent;
            border: 0;
            border-radius: 0;
            outline: none;

            svg {
              width: 14px;
              height: 14px;
              fill: #212529;
            }
          }
        }
      }

      // 面板
      .panel-body {
        position: relative;
        flex-grow: 1;
        overflow: auto;

        .output-loader-wraper {
          position: absolute;
          inset: 0;
          display: none;
          align-items: center;
          justify-content: center;
          background-color: #fff;

          &.open {
            display: flex;
          }
        }

        iframe {
          display: block;
          width: 100%;
          height: 100%;
          border: none;
        }

        > div {
          height: 100%;

          @include codemirror;
        }
      }
    }
  }
}
